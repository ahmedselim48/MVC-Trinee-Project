// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tech.Models;

#nullable disable

namespace Tech.Migrations
{
    [DbContext(typeof(TechContext))]
    partial class TechContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tech.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Degree")
                        .HasColumnType("float");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<float>("Hours")
                        .HasColumnType("real");

                    b.Property<double>("MinDegree")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = 90.0,
                            DeptId = 1,
                            Hours = 3f,
                            MinDegree = 70.0,
                            Name = "C# Programming"
                        },
                        new
                        {
                            Id = 2,
                            Degree = 70.0,
                            DeptId = 1,
                            Hours = 3f,
                            MinDegree = 65.0,
                            Name = "OOP"
                        },
                        new
                        {
                            Id = 3,
                            Degree = 65.0,
                            DeptId = 2,
                            Hours = 3f,
                            MinDegree = 60.0,
                            Name = "Database"
                        });
                });

            modelBuilder.Entity("Tech.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manager = "Dr.Ali",
                            Name = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            Manager = "Dr.Osama",
                            Name = "AI"
                        },
                        new
                        {
                            Id = 3,
                            Manager = "Dr.Omar",
                            Name = "Information System "
                        });
                });

            modelBuilder.Entity("Tech.Models.Instructore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CrsId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CrsId");

                    b.HasIndex("DeptId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Alex",
                            CrsId = 1,
                            DeptId = 1,
                            ImageUrl = "ahmed.jpg",
                            Name = "Ahmed Selim",
                            Salary = 7000m
                        },
                        new
                        {
                            Id = 2,
                            Address = "Giza",
                            CrsId = 2,
                            DeptId = 2,
                            ImageUrl = "mohamed.png",
                            Name = "Mohamed",
                            Salary = 5500m
                        });
                });

            modelBuilder.Entity("Tech.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.ToTable("Trainees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ALex",
                            DeptId = 1,
                            Grade = 3.2000000000000002,
                            ImageUrl = " ",
                            Name = "AHMED AHMED"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Cairo",
                            DeptId = 1,
                            Grade = 3.1000000000000001,
                            ImageUrl = " ",
                            Name = "ALI ALI "
                        },
                        new
                        {
                            Id = 3,
                            Address = "Damanhour",
                            DeptId = 2,
                            Grade = 2.7000000000000002,
                            ImageUrl = " ",
                            Name = "OMAR OMAR"
                        });
                });

            modelBuilder.Entity("Tech.Models.crsResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CrsId")
                        .HasColumnType("int");

                    b.Property<double>("Degree")
                        .HasColumnType("float");

                    b.Property<int>("TraineeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CrsId");

                    b.HasIndex("TraineeID");

                    b.ToTable("crsResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CrsId = 1,
                            Degree = 85.0,
                            TraineeID = 1
                        },
                        new
                        {
                            Id = 2,
                            CrsId = 2,
                            Degree = 78.0,
                            TraineeID = 1
                        },
                        new
                        {
                            Id = 3,
                            CrsId = 1,
                            Degree = 92.0,
                            TraineeID = 2
                        },
                        new
                        {
                            Id = 4,
                            CrsId = 3,
                            Degree = 88.0,
                            TraineeID = 3
                        });
                });

            modelBuilder.Entity("Tech.Models.Course", b =>
                {
                    b.HasOne("Tech.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Tech.Models.Instructore", b =>
                {
                    b.HasOne("Tech.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tech.Models.Department", "Department")
                        .WithMany("instructores")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Tech.Models.Trainee", b =>
                {
                    b.HasOne("Tech.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Tech.Models.crsResult", b =>
                {
                    b.HasOne("Tech.Models.Course", "Course")
                        .WithMany("crsResults")
                        .HasForeignKey("CrsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tech.Models.Trainee", "Trainee")
                        .WithMany("crsResults")
                        .HasForeignKey("TraineeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("Tech.Models.Course", b =>
                {
                    b.Navigation("crsResults");
                });

            modelBuilder.Entity("Tech.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Trainees");

                    b.Navigation("instructores");
                });

            modelBuilder.Entity("Tech.Models.Trainee", b =>
                {
                    b.Navigation("crsResults");
                });
#pragma warning restore 612, 618
        }
    }
}
